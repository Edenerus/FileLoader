version: "3.8"

services:
  web:
    image: edenerus/fileloader:latest
    container_name: file_loader_app
    command: >
      bash -c "sleep 5 &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./app/:/usr/src/app/
    restart: always

    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: fileloader-db
    image: postgres:14.6-alpine
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - fileloader_pg_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 15s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: file_loader_redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./data/cache:/data

  celery:
    build: .
    container_name: file_loader_celery
    restart: on-failure
    command: bash -c "sleep 5 && python -m celery -A config worker -l info"
    environment:
      DB_HOST: db
    depends_on:
      - web

volumes:
  fileloader_pg_data:
    name: fileloader_pg_data